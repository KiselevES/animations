/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{font-size:16px}body{font-family:Helvetica,serif;-webkit-font-smoothing:antialiased;line-height:1.42;background:#fff}body,html{width:100%;height:100%}header{height:0}.wrapper{min-height:100%;overflow:hidden;position:relative}.wrapper:after{content:"";height:0;display:block}footer{height:0;margin-top:0;position:relative}.container{max-width:940px;margin:0 auto}*{box-sizing:border-box}ul{padding:0;margin:0}li{list-style:none}p{margin-top:0}h1,h2,h3,h4,h5,h6{margin-top:0;font-weight:400}header{background:#ff0}footer{background:blue}.animation__block-out{transition:all .7s ease-in-out}.animation__block{position:relative;display:inline-block;margin:20px;border-radius:5px;background:red;width:130px;height:130px;box-shadow:5px 5px 10px rgba(0,0,0,.5)}.animation__block:hover{transition:transform .7s ease-in-out}.animation__block-desc{position:absolute;height:10px;width:120px;font-size:12px;top:0;right:0;bottom:0;left:0;margin:auto}.animation__block-translate:hover{transform:translate(20px,20px)}.animation__block-translateX{background:#ff0}.animation__block-translateX:hover{transform:translateX(20px)}.animation__block-translateY{background:green}.animation__block-translateY:hover{transform:translateY(20px)}.animation__block-scale{background:blue}.animation__block-scale:hover{transform:scale(1.5)}.animation__block-scaleX{background:#c50fe5}.animation__block-scaleX:hover{transform:scaleX(1.5)}.animation__block-scaleY{background:#3adb0e}.animation__block-scaleY:hover{transform:scaleY(1.5)}.animation__block-rotate{background:#cf5b0e}.animation__block-rotate:hover{transform:rotate(45deg)}.animation__block-skew{background:#31eabe}.animation__block-skew:hover{transform:skew(30deg,30deg)}.animation__block-skewX{background:#73074e}.animation__block-skewX:hover{transform:skewX(30deg)}.animation__block-skewY{background:#553785}.animation__block-skewY:hover{transform:skewY(30deg)}.animation__block-matrix{background:#e716c4}.animation__block-matrix:hover{transform:matrix(1.2,0,.5,1.2,50,0)}.animation__block-matrix .animation__block-desc{font-size:11px}.animation__block-transform-origin{background:#d9364e}.animation__block-transform-origin .animation__block-desc{font-size:9px}.animation__block-transform-origin:hover{transform-origin:10% 20%;transform:rotate(-45deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
